<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYmJiDVtbW/9ZWVk5W1tbgVxcXMMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZmZmBVtbW/9aWlpBXFxcelpa
        WssAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiYmINW1tb/1lZWTlbW1uBXFxcwwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZmYFW1tb/1pa
        WkFcXFx6XFxc3FpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVpaWlVaWlpVWlpaVVxcXF5bW1v/WVlZOVtb
        W4FcXFzDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZm
        ZgVbW1v/WlpaQVxcXFlbW1vrW1tb7ltbW+5bW1vuW1tb7ltbW+5bW1vuW1tb7ltbW+5bW1vuW1tb7ltb
        W+VaWloiW1tbgVxcXMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZmZmBVtbW/9aWlpBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWlpadFtbW0MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABbW1uBXFxcwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABW1tb8VtbW3laWloiWlpaIlpaWiJaWloiWlpaIlpaWiJbW1tcWFhYQFpa
        WiJaWloiWlpaIlpaWiJaWloiXFxcJFtbW7BbW1uxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFxnW1tb+1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb7VtbWzsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZmYKWlpaIlpaWiJaWloiWlpaIlpa
        WiJaWloiWlpaIlpaWiJaWloiWlpaIlpaWiJaWloiWlpaIlhYWCBAQEAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////wAA//5//n/++D5//v/+f/7AAn/+3/p//t/6f/7f
        +n/+3/p//t/6f/7f+n/+3/p//t/6f/7f+n/+3/p//t/6f/7f+n/+3/p//t/6f/7f+n/+3/p//t/6f/7f
        +n/+3/p//sACf/7//n/+//5//wAA////////////
</value>
  </data>
</root>